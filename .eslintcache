[{"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\index.tsx":"1","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\App.tsx":"2","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\routes.ts":"3","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Layout\\Content.tsx":"4","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\context\\index.tsx":"5","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Layout\\BodyWrapper.tsx":"6","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Layout\\NavSidebar.tsx":"7","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\PageTitle\\index.tsx":"8","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Home\\index.tsx":"9","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Lottery\\index.tsx":"10","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Login\\index.tsx":"11","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Staking\\index.tsx":"12","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Stats\\index.tsx":"13","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\context\\reducer.tsx":"14","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\context\\state.tsx":"15","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Layout\\Footer\\index.jsx":"16","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Staking\\AssetCards.tsx":"17","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Login\\Ledger.tsx":"18","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Login\\Wallet.tsx":"19","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\storage\\session.tsx":"20","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\Staking.tsx":"21","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\index.tsx":"22","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Staking\\Stats.tsx":"23","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\config.tsx":"24","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\addresses.tsx":"25","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\Lottery.tsx":"26","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Denominate\\index.tsx":"27","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Denominate\\denominate.tsx":"28","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\abi.tsx":"29"},{"size":544,"mtime":1609695255467,"results":"30","hashOfConfig":"31"},{"size":1483,"mtime":1609708728369,"results":"32","hashOfConfig":"31"},{"size":1216,"mtime":1609702042043,"results":"33","hashOfConfig":"31"},{"size":818,"mtime":1609682327570,"results":"34","hashOfConfig":"31"},{"size":1110,"mtime":1609682327573,"results":"35","hashOfConfig":"31"},{"size":257,"mtime":1609682327570,"results":"36","hashOfConfig":"31"},{"size":2836,"mtime":1609682327571,"results":"37","hashOfConfig":"31"},{"size":294,"mtime":1609682327573,"results":"38","hashOfConfig":"31"},{"size":103,"mtime":1609682327585,"results":"39","hashOfConfig":"31"},{"size":1284,"mtime":1609682327586,"results":"40","hashOfConfig":"31"},{"size":718,"mtime":1609682327586,"results":"41","hashOfConfig":"31"},{"size":6173,"mtime":1609708823342,"results":"42","hashOfConfig":"31"},{"size":442,"mtime":1609701898576,"results":"43","hashOfConfig":"31"},{"size":1281,"mtime":1609682327574,"results":"44","hashOfConfig":"31"},{"size":879,"mtime":1609709004009,"results":"45","hashOfConfig":"31"},{"size":668,"mtime":1609682327571,"results":"46","hashOfConfig":"31"},{"size":1607,"mtime":1609702600350,"results":"47","hashOfConfig":"31"},{"size":1964,"mtime":1609698280846,"results":"48","hashOfConfig":"31"},{"size":2427,"mtime":1609682327572,"results":"49","hashOfConfig":"31"},{"size":891,"mtime":1609682327589,"results":"50","hashOfConfig":"31"},{"size":4514,"mtime":1609712295103,"results":"51","hashOfConfig":"31"},{"size":129,"mtime":1609682327576,"results":"52","hashOfConfig":"31"},{"size":2300,"mtime":1609682327587,"results":"53","hashOfConfig":"31"},{"size":5041,"mtime":1609682327573,"results":"54","hashOfConfig":"31"},{"size":291,"mtime":1609682327575,"results":"55","hashOfConfig":"31"},{"size":3410,"mtime":1609682327574,"results":"56","hashOfConfig":"31"},{"size":2024,"mtime":1609682327570,"results":"57","hashOfConfig":"31"},{"size":2793,"mtime":1609682327569,"results":"58","hashOfConfig":"31"},{"size":3754,"mtime":1609682327575,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"3t2oty",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\index.tsx",[],["121","122"],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\App.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\routes.ts",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Layout\\Content.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\context\\index.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Layout\\BodyWrapper.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Layout\\NavSidebar.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\PageTitle\\index.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Lottery\\index.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Login\\index.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Staking\\index.tsx",["123"],"import {\r\n  faBookOpen,\r\n  faCheck,\r\n  faMoneyCheck,\r\n  faWonSign,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useContext } from \"../../context\";\r\nimport { Staking as SC } from \"../../contracts/Staking\";\r\nimport AssetsCard from \"./AssetCards\";\r\nimport {\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBCardGroup,\r\n} from \"mdbreact\";\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nconst Staking = () => {\r\n  const { address, dapp } = useContext();\r\n  const staking = useState(new SC(address, dapp.proxy, dapp.provider))[0];\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [userStakedBalance, setUserStakedBalance] = useState(0);\r\n  const [userRewardsAvailable, setUserRewardAvailable] = useState(0);\r\n  const [delegateAmount, setDelegateAmount] = useState(10);\r\n  const [userBalance, setUserBalance] = useState(\"0\");\r\n  const [modal, setModal] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const updateUserData = async () => {\r\n    setLoaded(false);\r\n    const userData = await staking.getUserData();\r\n    setUserBalance(userData.balance);\r\n    const result = await staking.getUserActiveStake();\r\n    setIsActive(result.isActive);\r\n    await staking.getContractConfig();\r\n    if (result.isActive && result.stakeAmount) {\r\n      setUserStakedBalance(result.stakeAmount);\r\n      const rewardsAvailable = await staking.getClaimableRewards();\r\n      if (rewardsAvailable) {\r\n        setUserRewardAvailable(rewardsAvailable.rewardAmount);\r\n      }\r\n    }\r\n    setLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchUserData() {\r\n      await updateUserData();\r\n    }\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const delegate = async () => {\r\n    await staking.delegate(delegateAmount);\r\n    setModal(false);\r\n    setDelegateAmount(10);\r\n  };\r\n\r\n  if (!loaded) {\r\n    return null;\r\n  }\r\n  const bnBalance = new BigNumber(userBalance);\r\n  const bnDelegated = new BigNumber(userStakedBalance);\r\n  const bnRewards = new BigNumber(userRewardsAvailable);\r\n\r\n  const total = bnBalance\r\n    .plus(bnDelegated)\r\n    .plus(bnRewards)\r\n    .toString(10);\r\n\r\n  const entries = isActive\r\n    ? [\r\n        {\r\n          label: \"Total\",\r\n          value: !isNaN(parseFloat(total)) ? total : userBalance,\r\n          showDecimals: true,\r\n          icon: faMoneyCheck,\r\n          className: \"total\",\r\n          dataTestId: \"total\",\r\n        },\r\n        {\r\n          label: \"Available\",\r\n          value: userBalance,\r\n          icon: faCheck,\r\n          showDecimals: true,\r\n          className: \"available\",\r\n          dataTestId: \"balance\",\r\n        },\r\n        {\r\n          label: \"Delegated\",\r\n          value: bnDelegated,\r\n          icon: faBookOpen,\r\n          showDecimals: true,\r\n          className: \"delegated\",\r\n          dataTestId: \"delegated\",\r\n        },\r\n        {\r\n          label: \"Reward\",\r\n          value: bnRewards,\r\n          icon: faWonSign,\r\n          showDecimals: true,\r\n          className: \"rewards\",\r\n          dataTestId: \"rewards\",\r\n        },\r\n      ]\r\n    : [\r\n        {\r\n          label: \"Available\",\r\n          value: userBalance,\r\n          icon: faMoneyCheck,\r\n          showDecimals: true,\r\n          className: \"total\",\r\n          dataTestId: \"balance\",\r\n        },\r\n      ];\r\n\r\n  return (\r\n    <div className=\"justify-content-center\">\r\n      <MDBCardGroup deck>\r\n        {entries.map(\r\n          (\r\n            { label, value, icon, className, dataTestId, showDecimals },\r\n            index\r\n          ) => (\r\n            <AssetsCard\r\n              key={index}\r\n              icon={icon}\r\n              showDecimals={showDecimals}\r\n              dataTestId={dataTestId}\r\n              className={className}\r\n              label={label}\r\n              value={value.toString()}\r\n            />\r\n          )\r\n        )}\r\n      </MDBCardGroup>\r\n      <MDBCardGroup deck>\r\n        <MDBCard\r\n          className=\"card-body\"\r\n          style={{ width: \"22rem\", padding: \"15px\", marginTop: \"1rem\" }}\r\n        >\r\n          <MDBCardTitle>Delegate</MDBCardTitle>\r\n          <MDBCardText>\r\n            Delegate your tokens to secure the network and capture your share of\r\n            the rewards.\r\n          </MDBCardText>\r\n          <div className=\"flex-row\">\r\n            <MDBBtn\r\n              onClick={() => {\r\n                setModal(!modal);\r\n              }}\r\n            >\r\n              Delegate\r\n            </MDBBtn>\r\n            {/* @ts-ignore */}\r\n            <MDBModal\r\n              isOpen={modal}\r\n              toggle={() => {\r\n                setModal(!modal);\r\n              }}\r\n              centered\r\n              animation={\"top\"}\r\n              autoFocus={true}\r\n            >\r\n              <MDBModalHeader\r\n                toggle={() => {\r\n                  setModal(!modal);\r\n                }}\r\n              >\r\n                Delegate Now\r\n              </MDBModalHeader>\r\n              <MDBModalBody>\r\n                <label htmlFor=\"amount\" className=\"grey-text\">\r\n                  Amount\r\n                </label>\r\n                <MDBInput\r\n                  min={10}\r\n                  value={delegateAmount}\r\n                  onChange={(e) => {\r\n                    /* @ts-ignore */\r\n                    setDelegateAmount(e.target.value);\r\n                  }}\r\n                  type=\"number\"\r\n                  id=\"amount\"\r\n                />\r\n              </MDBModalBody>\r\n              <MDBModalFooter>\r\n                <MDBBtn\r\n                  color=\"warning\"\r\n                  onClick={() => {\r\n                    setModal(!modal);\r\n                  }}\r\n                >\r\n                  Close\r\n                </MDBBtn>\r\n                <MDBBtn\r\n                  color=\"success\"\r\n                  onClick={() => {\r\n                    delegate();\r\n                  }}\r\n                >\r\n                  Send\r\n                </MDBBtn>\r\n              </MDBModalFooter>\r\n            </MDBModal>\r\n          </div>\r\n        </MDBCard>\r\n      </MDBCardGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Staking;\r\n","C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Stats\\index.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\context\\reducer.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\context\\state.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Layout\\Footer\\index.jsx",[],["124","125"],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Staking\\AssetCards.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Login\\Ledger.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Login\\Wallet.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\storage\\session.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\Staking.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\index.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\pages\\Staking\\Stats.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\config.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\addresses.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\Lottery.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Denominate\\index.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\components\\Denominate\\denominate.tsx",[],"C:\\Users\\Dani\\Documents\\GitHub\\Website\\src\\contracts\\abi.tsx",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":58,"column":6,"nodeType":"132","endLine":58,"endColumn":8,"suggestions":"133"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateUserData'. Either include it or remove the dependency array.","ArrayExpression",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [updateUserData]",{"range":"139","text":"140"},[1797,1799],"[updateUserData]"]